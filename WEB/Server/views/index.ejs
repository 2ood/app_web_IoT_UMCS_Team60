<!DOCTYPE html>
<html lang="en" dir="ltr">
  <head>
    <style>

      .messages { list-style-type: none; margin: 0; padding: 0; }
      .messages li { padding: 5px 10px; }
      .messages li{ background: #eee; }
      form{width:200px;display:inline;}
    </style>    
    <meta charset="utf-8">
    <title>Index Page</title>
  </head>
  <body>
    <form action="/manager" method="get">
        <button type="submit">관리자 로그인(session)</button>
    </form>
    <form action="/user" method="get">
        <button type="submit">사용자 로그인(jwt)</button>
    </form>
    <form action="/socketUser" method="get">
      <button type="submit">소켓통신(사용자)</button>
    </form>
    <form action="/socketManager" method="get">
      <button type="submit">소켓통신(관리자)</button>
    </form>
    
    <br><br>

    <input type="date" id="anomalydate"> <- 이 날짜로 
    <button id="gendate">임의 체온보고데이터 생성</button>

    <br><br>

    <select id="setwatchmanmanager"></select>를 <input type="date" id="setwatchmandate">에 <select id="setwatchmandoom"></select>관리자로 <button id="setwatchman">지정</button>


    <br/><br/><br/>

    관리자
    <ul class="messages" id="manager"></ul>
    사용자
    <ul class="messages" id="user"></ul>
    생활관건물
    <ul class="messages" id="doom"></ul>
    외부시설
    <ul class="messages" id="outside_facility"></ul>
    호실
    <ul class="messages" id="doomroom"></ul>
    공공시설
    <ul class="messages" id="doomfacility"></ul>
    외부시설 사용요청
    <ul class="messages" id="outside_request"></ul>
    공공시설 사용요청
    <ul class="messages" id="facility_request"></ul>
    체온 보고
    <ul class="messages" id="anomaly"></ul>
    
  </body>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/2.3.1/socket.io.js"></script>
  <script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>
  <script src="https://unpkg.com/axios/dist/axios.min.js"></script>
  <script>
    Date.prototype.toDateInputValue = (function() {
        var local = new Date(this);
        local.setMinutes(this.getMinutes() - this.getTimezoneOffset());
        return local.toJSON().slice(0,10);
    });
    $(function () {
      jQuery(document).ready(function() {
        axios.get('/api/manager')
        .then(function(res) {
          for(b of res.data.data) 
            $('#setwatchmanmanager').append($('<option></option>').val(b.tag).html(b.tag + " " + b.name));
        })
        axios.get('/api/doom')
        .then(function(res) {
          for(b of res.data.data) 
            $('#setwatchmandoom').append($('<option></option>').val(b.id).html(b.id + " " + b.name));
        })



        axios.get('/api/manager')
        .then(function(res) {
          for(line of res.data.data)
            $('#manager').append($('<li>').text(JSON.stringify(line))); 
        })
        axios.get('/api/user')
        .then(function(res) {
          for(line of res.data.data)
          $('#user').append($('<li>').text(JSON.stringify(line))); 
        })
        axios.get('/api/doom')
        .then(function(res) {
          for(line of res.data.data)
          $('#doom').append($('<li>').text(JSON.stringify(line))); 
        })
        axios.get('/api/outside_facility')
        .then(function(res) {
          for(line of res.data.data)
          $('#outside_facility').append($('<li>').text(JSON.stringify(line))); 
        })
        axios.get('/api/doomroom')
        .then(function(res) {
          for(line of res.data.data)
          $('#doomroom').append($('<li>').text(JSON.stringify(line))); 
        })
        axios.get('/api/doomfacility')
        .then(function(res) {
          for(line of res.data.data)
          $('#doomfacility').append($('<li>').text(JSON.stringify(line))); 
        })
        axios.get('/api/outside_request')
        .then(function(res) {
          for(line of res.data.data)
          $('#outside_request').append($('<li>').text(JSON.stringify(line))); 
        })
        axios.get('/api/facility_request')
        .then(function(res) {
          for(line of res.data.data)
          $('#facility_request').append($('<li>').text(JSON.stringify(line))); 
        })
        axios.get('/api/anomaly')
        .then(function(res) {
          for(line of res.data.data)
          $('#anomaly').append($('<li>').text(JSON.stringify(line))); 
        })
        $('#anomalydate').val(new Date().toDateInputValue());
        $('#setwatchmandate').val(new Date().toDateInputValue());
      });

      $('#gendate').click(function(e) {
        e.preventDefault();
        axios.get('dev/makeAnomaly/'+$('#anomalydate').val());
        return false;
      });

      $('#setwatchman').click(function(e) {
        e.preventDefault();
        axios.post('api/watchman/', {
          manager_tags: $('#setwatchmanmanager').val(),
          charge_doom: $('#setwatchmandoom').val(),
          responsible_date: $('#setwatchmandate').val()
        });
        return false;
      });
    });
  </script>
</html>